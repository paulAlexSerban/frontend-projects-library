name: CI Develop
on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened

  workflow_call:

jobs:
  lint-code:
    name: Lint Code Standards
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Verify if there were changes in ./js-component-library
      - name: "🔍  Verify Changed ./js-component-library files"
        uses: tj-actions/changed-files@v23.1
        id: changed-js-component-library
        with:
          files: |
              frontend/js-component-library/**/*.js

      # Verify if there are changes in ./living-style-guide
      - name: "🔍  Verify Changed ./living-style-guide files"
        uses: tj-actions/changed-files@v23.1
        id: changed-living-style-guide
        with:
          files: |
              frontend/living-style-guide/**/*.scss

      # Cache node_modules to speed up things if there were changes in ./js-component-library OR ./living-style-guide
      - name: "Cache node_modules"
        if: steps.changed-js-component-library.outputs.any_changed == 'true' || steps.changed-living-style-guide.outputs.any_changed == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install NodeJS & npm if there were changes in ./js-component-library OR ./living-style-guide
      - name: "🔧 Setup NodeJS 14.19.1"
        if: steps.changed-js-component-library.outputs.any_changed == 'true' || steps.changed-living-style-guide.outputs.any_changed == 'true'
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.1

      - name: "🔧 Install npm@latest"
        if: steps.changed-js-component-library.outputs.any_changed == 'true' || steps.changed-living-style-guide.outputs.any_changed == 'true'
        run: npm i -g npm@latest

      # Install ./js-component-library dependencies if there are changes detected
      - name: "📦  Install JSCL DEV dependencies"
        if: steps.changed-js-component-library.outputs.any_changed == 'true'
        run: npm --prefix frontend/js-component-library install

      # Install ./living-style-guide dependencies if there are changes detected
      - name: "📦  Install LSG DEV dependencies"
        if: steps.changed-living-style-guide.outputs.any_changed == 'true'
        run: npm --prefix frontend/living-style-guide install

      # Lint ./js-component-library dependencies if there are changes detected
      - name: "🔍  Lint ./js-component-library code"
        if: steps.changed-js-component-library.outputs.any_changed == 'true'
        run: npm run lint:jscl

      # Install ./living-style-guide dependencies if there are changes detected
      - name: "🔍  Lint ./living-style-guide code"
        if: steps.changed-living-style-guide.outputs.any_changed == 'true'
        run: npm run lint:lsg
  
  test-code:
    name: Test Code
    runs-on: ubuntu-latest
    needs:
      - lint-code
    steps:
      # Checkout repository
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Verify if there were changes in ./js-component-library
      - name: "🔍  Verify Changed ./js-component-library files"
        uses: tj-actions/changed-files@v23.1
        id: changed-js-component-library
        with:
          files: |
              frontend/js-component-library/**/*.js

      # Verify if there are changes in ./living-style-guide
      - name: "🔍  Verify Changed ./living-style-guide files"
        uses: tj-actions/changed-files@v23.1
        id: changed-living-style-guide
        with:
          files: |
              frontend/living-style-guide/**/*.scss
    
      # Cache node_modules to speed up things if there were changes in ./js-component-library OR ./living-style-guide
      - name: "Cache node_modules"
        if: steps.changed-js-component-library.outputs.any_changed == 'true' || steps.changed-living-style-guide.outputs.any_changed == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install NodeJS & npm if there were changes in ./js-component-library OR ./living-style-guide
      - name: "🔧 Setup NodeJS 14.19.1"
        if: steps.changed-js-component-library.outputs.any_changed == 'true' || steps.changed-living-style-guide.outputs.any_changed == 'true'
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.1

      - name: "🔧 Install npm@latest"
        if: steps.changed-js-component-library.outputs.any_changed == 'true' || steps.changed-living-style-guide.outputs.any_changed == 'true'
        run: npm i -g npm@latest

      # Install ./js-component-library dependencies if there are changes detected
      - name: "📦  Install LSG DEV dependencies"
        if: steps.changed-living-style-guide.outputs.any_changed == 'true'
        run: npm --prefix frontend/living-style-guide install

      # Install ./living-style-guide dependencies if there are changes detected
      - name: "🧪  Run LSG Unit Tests"
        if: steps.changed-living-style-guide.outputs.any_changed == 'true'
        run: npm run --prefix frontend/living-style-guide test

  test-docker:
    name: Test Docker
    runs-on: ubuntu-latest
    needs:
      - lint-code
      - test-code
    steps:
      # Checkout repository
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Verify if there were changes in ./docker or *.Dockerfile
      - name: "🔍  Verify Changed ./docker or *.Dockerfile files"
        uses: tj-actions/changed-files@v23.1
        id: changed-docker
        with:
          files: |
              docker/*.yml
              **/*.Dockerfile
              backend/proxy/*

      # Verify if there were changes in ./docker/*.proxy.yml or ./backend/proxy/*
      - name: "🔍  Verify Changed ./docker/*.proxy.yml or ./backend/proxy/* file"
        if: steps.changed-docker.outputs.any_changed == 'true'
        uses: tj-actions/changed-files@v23.1
        id: changed-docker-proxy
        with:
          files: |
              docker/*.proxy.yml
              backend/proxy/*
      
      # Verify if there were changes in ./docker/*.poc.yml or ./frontend/static/poc/*.Dockerfile
      - name: "🔍  Verify Changed ./docker/*.poc.yml or ./frontend/static/poc/*.Dockerfile file"
        if: steps.changed-docker.outputs.any_changed == 'true'
        uses: tj-actions/changed-files@v23.1
        id: changed-docker-poc
        with:
          files: |
              docker/*.poc.yml
              frontend/static/poc/*.Dockerfile

      # Cache node_modules to speed up things if there were changes in ./docker or *.Dockerfile
      - name: "Cache node_modules"
        if: steps.changed-docker.outputs.any_changed == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install NodeJS & npm if there were changes in ./docker or *.Dockerfile
      - name: "🔧  Setup NodeJS 14.19.1"
        if: steps.changed-docker.outputs.any_changed == 'true'
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.1

      - name: "🔧  Install npm@latest"
        if: steps.changed-docker.outputs.any_changed == 'true'
        run: npm i -g npm@latest

      # Install DEV dependencies if there are changes detected
      - name: "📦  Install DEV dependencies"
        if: steps.changed-docker.outputs.any_changed == 'true'
        run: npm run install:all

      # Build all projects files to be used in docker images if changes are detected
      - name: "🏗️  Build all projects"
        if: steps.changed-docker.outputs.any_changed == 'true'
        run: npm run build:all

      # Start Docker proxy container if there are changes detected
      - name: "🐳  Start Docker Proxy Container"
        if: steps.changed-docker-proxy.outputs.any_changed == 'true'
        run: npm run start:compose:proxy

      # Start Docker poc container if there are changes detected
      - name: "🐳  Start Docker Proof Of Concept Container"
        if: steps.changed-docker-poc.outputs.any_changed == 'true'
        run: npm run start:compose:poc
  
      - name: "🧪  Check running containers"
        if: steps.changed-docker.outputs.any_changed == 'true'
        run: docker ps -a
  
      # TEST - Curl Proxy
      - name: "🧪  TEST - Curl Proxy running container"
        if: steps.changed-docker-proxy.outputs.any_changed == 'true'
        run: npm run test:container:proxy

      # TEST - Curl Proof Of Concept
      - name: "🧪  TEST - Curl Proof Of Concept running container"
        if: steps.changed-docker-poc.outputs.any_changed == 'true'
        run: npm run test:container:poc